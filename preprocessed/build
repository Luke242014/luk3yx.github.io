#!/bin/bash
# Simple template builder
# Copyright Â© 2016 by luk3yx.
# All rights reserved.
#
# sed '/<!--/,/-->/d'
(
sleep 0.3
echo "# Loading..."

DIR=$(pwd)
template="./template.html"
stemplate="./template.slim"
alldir="./html"
alldir=$(readlink -m "$alldir")

function build {
    echo "# Building $in..."
    out="../$in"
    in="./html/$in"
    
    in=$(readlink -m "$in")
    template=$(readlink -m "$template")
    out=$(readlink -m "$out")
    
        case "$(head -n1 $in)" in
            'REDIRECT~'*)
            title=$(cat "$in" | cut -d "~" -f 2-)
            in="./html/$title"
            ;;
            'REDIRECT@'*)
            title=$(cat "$in" | cut -d "@" -f 2-)
            rm "$out"
            echo "<script>window.stop(); window.location.href = '$title';</script><title>Redirecting...</title><link rel='canonical' href='$title' /><meta http-equiv='refresh' content='0; url=$title' /><a href='$title'>Click here to continue...</a>" > "$out"
            return 0
            ;;
            'REDIRECT?'*)
            title=$(cat "$in" | cut -d "?" -f 2-)
            rm "$out"
            cat "../$title" > "$out"
            return 0
            ;;
        esac
    
    indent="        "
    string="$indent<h1>Don't edit me. I help the auto-generator.</h1>"
    tspace="    "
    title="$tspace<title id=\"title\">luk3yx's website</title>"
    
    function hit {
        while IFS='' read -r line; do
            echo "$indent$line" >> "$out"
        done < "$in"
    }
    
    rm "$out"
    year=$(date -u +%Y)
    #date="Last modification date: "$(date -u)'<br/>'
    while IFS='' read -r line; do
        if [ "$line" = "$string" ]; then
            hit
        elif [ "$line" = "$title" ]; then
            ptitle2=$(head -n2 "$in" | tail -n1 | cut -d '<' -f1 | cut -c4-)
            if [ "$ptitle2" = "" ] || [ "$(basename $in)" = "index.html" ]; then
                ptitle="luk3yx's website"
            else
                ptitle="$ptitle2 - luk3yx's website"
            fi
            pline="$tindent<title id=\"title\">$ptitle</title>"
            echo "$pline" >> "$out"
        else
            pline="${line//<!--YEAR -->/$year }"
            #pline="${pline//<!--DATE-->/$date}"
            pline="${pline//<!--DATE-->/}"
            echo "$pline" >> "$out"
        fi
    done < "$template"
    
    showprog
}

cd "$alldir"
#files=(*)
echo "# Indexing..."
function indexfolder {
    for file in "$@"; do
        if [ -d "$file" ]; then
            cd "$DIR/.."
            [ -e "./$file" ] || mkdir "./$file"
            cd "$alldir"
            indexfolder "$file"/*
        else
            files=("${files[@]}" "$file")
        fi
    done
}
indexfolder *
cd "$DIR"
int="${#files[@]}"
let int=85/int
c=0
function showprog {
    let c=c+1
    let int2=int*c
    [ "$int2" -ge "100" ] && int2=99
    echo "$int2"
}
#echo "# Building compressed template..."
#sed '/<!--/,/-->/d' -- "$template" > "$template.c"
#template="$template.c"
echo -n "# Building SLIM template..."
rm "$stemplate"
while IFS='' read -r line; do
    case "$line" in
        *"<h1>Don't edit me. I help the auto-generator.</h1>"*)
        echo "."
        cline='== content'
        ;;
        *)
        cline="| $line"
        ;;
    esac
    echo "$cline" >> "$stemplate"
done <"$template"
showprog
echo "# Loading..."

for i in "${files[@]}"; do
    in="$i"
    echo "$i" >>/tmp/test
    build
done
echo "# Adding all files to Git..."
cd "$DIR/.."
git add .
echo 85
echo "# Creating commit..."
name=''
name=$(zenity --entry --title "Git commit name" --text "What have you changed?")
[ -z "$name" ] && name="Re-generate website on $(date -u)"
git commit -m "$name"
echo 90
echo "# Pushing Git..."
git push -f -u origin master
echo "# Done!"
echo 100
exit
) | zenity                              \
    --progress                          \
    --title "Simple Template Builder"   \
    --text "Building..."                \
    --width 400 --height 400            \
    --auto-close --auto-kill
